#!/usr/bin/env bash

set -e            # fail fast
set -o pipefail   # don't ignore exit codes when piping output

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BUILDPACK_DIR=$(cd $(dirname $0); cd ..; pwd)

source $BUILDPACK_DIR/bin/common.sh
trap cat_cpanm_build_log ERR

CPANMURL='https://raw.github.com/miyagawa/cpanminus/master/cpanm'
export PERL_CPANM_OPT="--quiet --notest"
if [ -e "$ENV_DIR/BUILDPACK_CPAN_MIRROR" ]; then
  BUILDPACK_CPAN_MIRROR=`cat $ENV_DIR/BUILDPACK_CPAN_MIRROR`
  status "Using CPAN mirror $BUILDPACK_CPAN_MIRROR"
  export PERL_CPANM_OPT="$PERL_CPANM_OPT --mirror-only --mirror $BUILDPACK_CPAN_MIRROR"
fi
CACHED_DIRS="local"

mkdir -p $CACHE_DIR
cd $BUILD_DIR

source $BUILDPACK_DIR/bin/steps/hooks/pre_compile $ENV_DIR

for dir in $CACHED_DIRS; do
  cp -R $CACHE_DIR/$dir . &> /dev/null || true
done

if [ -e "$ENV_DIR/LOCALURL" ]; then
  LOCALURL=`cat $ENV_DIR/LOCALURL`
  status "Extracting prebuilt dependencies from $LOCALURL"
  mkdir -p local
  curl --silent $LOCALURL | tar -xz -C local 2>&1 | indent
fi

status "Bootstrapping cpanm and local::lib"
curl --silent $CPANMURL | perl - --local-lib local App::cpanminus local::lib 2>&1 | indent
eval $(perl -Ilocal/lib/perl5 -Mlocal::lib=local 2>&1 | indent)

if [ -e cpanfile.snapshot ]; then
  if ! command -v carton >/dev/null 2>&1; then
    status "Installing carton"
    cpanm Carton 2>&1 | indent
  fi
  status "Installing dependencies (carton)"
  carton install --deployment --cached 2>&1 | indent
  rm -rf vendor/cache 2>&1
fi

status "Installing dependencies (cpanm)"
cpanm --installdeps . 2>&1 | indent

status "Installing Starman"
cpanm Starman 2>&1 | indent

source $BUILDPACK_DIR/bin/steps/hooks/post_compile $ENV_DIR

for dir in $CACHED_DIRS; do
  rm -rf $CACHE_DIR/$dir
  cp -R $dir $CACHE_DIR/
done
